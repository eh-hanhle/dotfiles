source-file "${HOME}/.tmux-themepack/powerline/block/green.tmuxtheme"
set -sg escape-time 0
set -g history-limit 999999
# remap prefix
unbind C-b
set-option -g prefix C-t
bind-key C-z send-prefix
bind -n S-Left  previous-window
bind -n S-Right next-window
set -g mouse on
unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
  send-keys -X copy-pipe "pbcopy" \;\
  send-keys -X clear-selection
set-option -g allow-rename off
unbind r

bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded" \;

set -g base-index 1
setw -g pane-base-index 1
set-option -g status-position top
set -g status-bg colour235
set -g status-left "#[fg=colour240,bg=colour235] Session #S"
set -g status-right "#[fg=colour240,bg=colour235] %h %a-%d %H:%M #{online_status}"
set -g window-status-separator ''
# Custom title
set -g pane-border-format "#{pane_index} #{b:pane_current_path}: #T"
set -g pane-border-style fg=colour255
set -g pane-active-border-style fg=colour100,bold
# Enable names for panes
# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
## Smart name for panes, hidden when zoomed or when only have 1 pane
set-hook -g 'after-resize-pane' 'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set pane-border-status off; else tmux set pane-border-status top; fi"'
set-hook -g 'window-pane-changed' 'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set pane-border-status off; else tmux set pane-border-status top; fi"'

bind-key -T prefix h select-pane -L
bind-key -T prefix l select-pane -R
bind-key -T prefix j select-pane -D
bind-key -T prefix k select-pane -U

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-l select-pane -R

set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @jump-key 'y'
set -g default-terminal 'xterm-256color'
set -ga terminal-overrides ',*:Tc'
set-option -g renumber-windows on
setw -g mode-keys vi
#
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -sel clip -i"

bind -n M-c send-keys 'C-l' \; clear-history
bind -n M-h set-option -g status #Ctrl+F3 Combo


is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

is_ssh="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?ssh$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 ($is_ssh && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 ($is_ssh && tmux send-keys C-k) || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

# Shortcut to switch pance faster
bind -n M-1 run "tmux select-pane -t 1"
bind -n M-2 run "tmux select-pane -t 2"
bind -n M-3 run "tmux select-pane -t 3"
bind -n M-4 run "tmux select-pane -t 4"
bind -n M-5 run "tmux select-pane -t 5"
bind -n M-6 run "tmux select-pane -t 6"

# Utility from a Minh
bind -n M-` run "if [[ `tmux list-panes -F '#{pane_id}' | wc -l | sed 's/ //g'` == "2" ]]; then (((tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U) && tmux resize-pane -Z); else tmux split-window -p 40 -c '#{pane_current_path}'; fi "
bind -n f12 run "if [[ `tmux list-panes -F '#{pane_id}' | wc -l | sed 's/ //g'` == "2" ]]; then (((tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U) && tmux resize-pane -Z); else tmux split-window -p 40 -c '#{pane_current_path}'; fi "

is_htop="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?htop$'"
bind -n f10 run "($is_htop && tmux send-keys f10) || \
                   tmux resize-pane -Z"

# Restore session after restart
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'schasse/tmux-jump'
set -g @plugin 'tmux-plugins/tmux-logging'
# tmux navigator between vim split
set -g default-shell $SHELL

# set -g default-command "reattach-to-user-namespace -l ${SHELL}"
# Plugin list
set -g @plugin 'tmux-plugins/tpm'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
